package com.spring.basic.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping("/response")
public class ResponseController {

	@GetMapping("/res-ex01")
	public void resEx01(){}
	
	
	/*
	1. Model 객체를 사용하여 응답할 화면에 데이터를 전송 하기
	스프링에서 제공하는 Model 타입의 객체를 활용하여 Jsp 파일과 같은 View 템플릿으로 데이터를 전송할 수 있습니다.
	Model 객체는 기본적으로 Request 객체의 attribute로 설정되어 전송되므로,
		기존에 알고 계시던 forward 방식의 응답과 유사함.
		(그러나 따로 forward를 할 필요 없이 그냥 담아만 놓으면 됨, 스프링내부적으로 이 Model은 Request영역에 저장됨.)
	 
	@GetMapping("/test")
	public void test(int age, Model model) {
		//단순히 test.jsp로 가는것 뿐 만 아니라 전달받은 파라미터를 같이 보내고 싶다!
		//스프링에서 호출하는 것(내가 호출x)이기 때문에 어떤 객체가 필요하다고 하면 Spring이 알아서 객체를 생성해서 준대!
		model.addAttribute("age",age);
		model.addAttribute("nick", "멍멍이");
		
	}
	*/
	
	
	//2. @ ModelAttribute를 사용한 화면에 데이터 전송 처리
	// @RequestParam + model.addAttribute 처럼 동작.
	@GetMapping("/test")
	public void test(@ModelAttribute("age") int age, Model model) {
		//int age와 동일한 이름의 파라미터를 가져와서 Model 객체에 "age"란 이름으로 담았음.
		model.addAttribute("nick","짹짹이");
	}
	
	
	
}
