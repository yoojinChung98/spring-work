<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet 관련 설정들이 모여있는 xml 파일-->
	
	<!-- 핸들러 어댑터, 핸들러 매핑 객체가
		개발자가 작성한 컨트롤러 등을 찾을 수 있게 설정하는 태그 (이 태그를 작성하여 두 태그가 생성됨) -->
	<annotation-driven />

	<!-- 정적 자원(html, css, js, img등...)을 절대 경로로 쉽게 맵핑해 주는 태그
        mapping에 작성된 경로: 외부로 노출되는 경로, location: 실제 파일의 경로 
        즉, 정적자원의 경로를 숨겨주는 역할 -->
    <resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<!-- 
        - 아노테이션을 사용해서 자동으로 빈 등록을 하게 해 주는 설정 태그.
        <beans:bean> 태그를 통해서 수동으로 빈 등록을 할 수 있지만,
        아노테이션을 통해 등록하는 방법도 있습니다.
        - com.spring.basic으로 경로가 시작하는 모든 클래스를 대상으로
         아노테이션으로 지정되어 있는 클래스를 찾아 자동으로 빈 등록을 실행합니다.
     -->
	<context:component-scan base-package="com.spring.basic" />
	
	
	
</beans:beans>
